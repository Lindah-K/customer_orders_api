name: CI/CD for Customer Order Services Django API

on:
  push:
    branches:
      - main

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  

      - name: Set up Python
        uses: actions/setup-python@v4  
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage  # Install coverage for code coverage

      - name: Debug Environment Variables
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}  
          SECRET_KEY: ${{ secrets.SECRET_KEY }}  
          DEBUG: ${{ secrets.DEBUG }}  
        run: |
          echo "CLIENT_ID is set: $CLIENT_ID"
          echo "SECRET_KEY is set: $SECRET_KEY"

      - name: Run Unit Tests with Coverage
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}  
          SECRET_KEY: ${{ secrets.SECRET_KEY }}  
          DEBUG: ${{ secrets.DEBUG }}  
          CLIENT_ID: ${{ secrets.CLIENT_ID }}  
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}  
          SMS_API_KEY: ${{ secrets.SMS_API_KEY }}  
        run: |
          coverage run --source='.' manage.py test  # Run tests with coverage
          coverage report  # Display coverage report
          #coverage html  # Generate HTML report for coverage

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov/*

      - name: Collect Static Files
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}  
          SECRET_KEY: ${{ secrets.SECRET_KEY }}  
        run: |
          python manage.py collectstatic --noinput

      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}  
          SECRET_KEY: ${{ secrets.SECRET_KEY }}  
          CLIENT_ID: ${{ secrets.CLIENT_ID }}  
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}  
        run: |
          curl -X POST https://api.render.com/deploy \
          -H "Authorization: Bearer $RENDER_API_KEY" \
          -d '{"serviceId":"srv-crpr70t6l47c73ao44r0"}'
